	.file	"Source.c"
	.def	___main;	.scl	2;	.type	32;	.endef
	.section .rdata,"dr"
	.align 4
LC5:
	.ascii "That rug really tied the room together\0"
LC6:
	.ascii "wb\0"
LC7:
	.ascii "output\0"
	.align 4
LC8:
	.ascii "first sizeof %d, second sizeof %d, third sizeof %d, forth sizeof %d, fifth sizeof %d, sixth sizeof %d, seventh sizeof %d, eigth sizeof %d, nineth sizeof %d, tenth sizeof %d, eleventh sizeof %d, twelveth sizeof %d\0"
	.text
	.globl	_main
	.def	_main;	.scl	2;	.type	32;	.endef
_main:
LFB17:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	andl	$-16, %esp
	subl	$368, %esp
	call	___main
	movl	$-1, 336(%esp)
	movb	$98, 340(%esp)
	fldl	LC0
	fstpl	344(%esp)
	movl	$10, 304(%esp)
	movl	$456, 312(%esp)
	movb	$114, 316(%esp)
	fldl	LC1
	fstpl	320(%esp)
	fldl	LC2
	fstpl	328(%esp)
	movl	$-2, 280(%esp)
	movb	$97, 284(%esp)
	movl	$634534, 288(%esp)
	movb	$54, 292(%esp)
	fldl	LC3
	fstpl	296(%esp)
	movl	$7, 232(%esp)
	movl	$8, 236(%esp)
	movl	$9, 240(%esp)
	movw	$300, 244(%esp)
	movw	$101, 246(%esp)
	movw	$7, 248(%esp)
	movw	$13, 250(%esp)
	movw	$12, 252(%esp)
	movl	$2, 256(%esp)
	movb	$119, 260(%esp)
	movl	$634534, 264(%esp)
	movb	$54, 268(%esp)
	fldl	LC4
	fstpl	272(%esp)
	movl	$1, 188(%esp)
	movl	$2, 192(%esp)
	movl	$3, 196(%esp)
	movl	$4, 200(%esp)
	movl	$5, 204(%esp)
	movl	$6, 208(%esp)
	movw	$9, 212(%esp)
	movw	$9, 214(%esp)
	movw	$9, 216(%esp)
	movw	$9, 218(%esp)
	movw	$9, 220(%esp)
	movw	$9, 222(%esp)
	movw	$8, 224(%esp)
	movl	$1024, 228(%esp)
	movzwl	180(%esp), %eax
	andw	$-4096, %ax
	orw	$2000, %ax
	movw	%ax, 180(%esp)
	movl	180(%esp), %eax
	andl	$-4190209, %eax
	orl	$4096000, %eax
	movl	%eax, 180(%esp)
	movzbl	182(%esp), %eax
	orl	$64, %eax
	movb	%al, 182(%esp)
	movl	$LC5, 184(%esp)
	leal	180(%esp), %eax
	movl	%eax, 360(%esp)
	movl	$6, 168(%esp)
	movl	$1, 172(%esp)
	movl	$8, 176(%esp)
	movl	$0, %ecx
	movl	$24, %eax
	andl	$-4, %eax
	movl	%eax, %edx
	movl	$0, %eax
L2:
	movl	%ecx, 144(%esp,%eax)
	addl	$4, %eax
	cmpl	%edx, %eax
	jb	L2
	movl	$7, 144(%esp)
	movl	$6, 148(%esp)
	movl	$-500, 152(%esp)
	movl	$0, 136(%esp)
	movl	$0, 140(%esp)
	movw	$-100, 136(%esp)
	movl	$0, %ecx
	movl	$32, %eax
	andl	$-4, %eax
	movl	%eax, %edx
	movl	$0, %eax
L4:
	movl	%ecx, 104(%esp,%eax)
	addl	$4, %eax
	cmpl	%edx, %eax
	jb	L4
	movb	$97, 112(%esp)
	movl	$8, (%esp)
	call	_malloc
	movl	%eax, 356(%esp)
	movl	$0, 84(%esp)
	movl	$0, 80(%esp)
	movl	$0, 76(%esp)
	movl	$0, 72(%esp)
	movl	$0, 68(%esp)
	movl	$0, 64(%esp)
	movl	$0, 352(%esp)
	movl	$0, 364(%esp)
	jmp	L6
L7:
	movl	364(%esp), %eax
	addl	$48, %eax
	movl	%eax, %ecx
	movl	356(%esp), %edx
	movl	364(%esp), %eax
	addl	%edx, %eax
	movb	%cl, (%eax)
	addl	$1, 364(%esp)
L6:
	cmpl	$7, 364(%esp)
	jle	L7
	movl	$1819043144, 91(%esp)
	movl	$1998597231, 95(%esp)
	movl	$1684828783, 99(%esp)
	movb	$0, 103(%esp)
	movl	$LC6, 4(%esp)
	movl	$LC7, (%esp)
	call	_fopen
	movl	%eax, 352(%esp)
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$16, 4(%esp)
	leal	336(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$32, 4(%esp)
	leal	304(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$24, 4(%esp)
	leal	280(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$48, 4(%esp)
	leal	232(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$44, 4(%esp)
	leal	188(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$8, 4(%esp)
	movl	360(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$12, 4(%esp)
	leal	168(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$24, 4(%esp)
	leal	144(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$8, 4(%esp)
	leal	136(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$32, 4(%esp)
	leal	104(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$13, 4(%esp)
	leal	91(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$0, 4(%esp)
	movl	356(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$4, 4(%esp)
	leal	84(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$4, 4(%esp)
	leal	80(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$4, 4(%esp)
	leal	76(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$4, 4(%esp)
	leal	72(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$4, 4(%esp)
	leal	68(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$4, 4(%esp)
	leal	64(%esp), %eax
	movl	%eax, (%esp)
	call	_fwrite
	movl	352(%esp), %eax
	movl	%eax, (%esp)
	call	_fclose
	movl	$0, 48(%esp)
	movl	$13, 44(%esp)
	movl	$32, 40(%esp)
	movl	$8, 36(%esp)
	movl	$24, 32(%esp)
	movl	$12, 28(%esp)
	movl	$8, 24(%esp)
	movl	$44, 20(%esp)
	movl	$48, 16(%esp)
	movl	$24, 12(%esp)
	movl	$32, 8(%esp)
	movl	$16, 4(%esp)
	movl	$LC8, (%esp)
	call	_printf
	call	_getchar
	movl	$0, %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
LFE17:
	.section .rdata,"dr"
	.align 8
LC0:
	.long	0
	.long	1074003968
	.align 8
LC1:
	.long	-1717986918
	.long	1069128089
	.align 8
LC2:
	.long	0
	.long	1078263808
	.align 8
LC3:
	.long	1469506283
	.long	-1044646491
	.align 8
LC4:
	.long	1997301177
	.long	1113279971
	.ident	"GCC: (MinGW.org GCC-6.3.0-1) 6.3.0"
	.def	_malloc;	.scl	2;	.type	32;	.endef
	.def	_fopen;	.scl	2;	.type	32;	.endef
	.def	_fwrite;	.scl	2;	.type	32;	.endef
	.def	_fclose;	.scl	2;	.type	32;	.endef
	.def	_printf;	.scl	2;	.type	32;	.endef
	.def	_getchar;	.scl	2;	.type	32;	.endef
